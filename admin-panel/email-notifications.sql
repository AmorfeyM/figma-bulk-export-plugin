-- Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–ø–∏—Å–∫–∏ Figma Plugin
-- –í—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç SQL –≤ Supabase Dashboard ‚Üí SQL Editor

-- 1. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤ email
CREATE TABLE IF NOT EXISTS public.email_templates (
  id SERIAL PRIMARY KEY,
  template_name VARCHAR(50) UNIQUE NOT NULL,
  subject TEXT NOT NULL,
  html_body TEXT NOT NULL,
  text_body TEXT,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö email
CREATE TABLE IF NOT EXISTS public.email_log (
  id SERIAL PRIMARY KEY,
  recipient_email VARCHAR(255) NOT NULL,
  template_name VARCHAR(50),
  subject TEXT,
  status VARCHAR(20) DEFAULT 'pending',
  error_message TEXT,
  sent_at TIMESTAMP WITH TIME ZONE,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 3. –í—Å—Ç–∞–≤–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤ email
INSERT INTO public.email_templates (template_name, subject, html_body, text_body) VALUES

-- –®–∞–±–ª–æ–Ω –¥–ª—è –Ω–æ–≤–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
('new_subscription',
'üéâ –í–∞—à –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á Figma Plugin –≥–æ—Ç–æ–≤!',
'<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: #667eea; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }
        .content { background: #f9f9f9; padding: 20px; border-radius: 0 0 8px 8px; }
        .license-key { background: #e8f4fd; padding: 15px; border-radius: 6px; margin: 15px 0; }
        .key-text { font-family: monospace; font-size: 18px; font-weight: bold; color: #0066cc; letter-spacing: 2px; }
        .footer { text-align: center; margin-top: 20px; font-size: 12px; color: #666; }
        .button { display: inline-block; background: #667eea; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; margin: 10px 0; }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Figma Bulk Export!</h1>
        </div>
        <div class="content">
            <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!</p>

            <p>–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ <strong>Figma Bulk Export Plugin</strong>! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.</p>

            <div class="license-key">
                <h3>üîë –í–∞—à –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á:</h3>
                <div class="key-text">{{LICENSE_KEY}}</div>
            </div>

            <h3>üìã –î–µ—Ç–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∏:</h3>
            <ul>
                <li><strong>Email:</strong> {{EMAIL}}</li>
                <li><strong>–ü–ª–∞–Ω:</strong> {{PLAN_NAME}}</li>
                <li><strong>–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:</strong> {{EXPIRES_DATE}}</li>
            </ul>

            <h3>üöÄ –ö–∞–∫ –Ω–∞—á–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</h3>
            <ol>
                <li>–û—Ç–∫—Ä–æ–π—Ç–µ Figma Desktop</li>
                <li>–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–ª–∞–≥–∏–Ω "Bulk Export by Sections"</li>
                <li>–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email –∏ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á</li>
                <li>–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —ç–∫—Å–ø–æ—Ä—Ç–æ–º!</li>
            </ol>

            <p>–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –Ω–∞–º.</p>

            <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ Figma Bulk Export</p>
        </div>
        <div class="footer">
            <p>–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–∏—Å—å–º–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.</p>
        </div>
    </div>
</body>
</html>',
'üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Figma Bulk Export!

–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É –ø–æ–¥–ø–∏—Å–∫–∏! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.

üîë –í–∞—à –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á: {{LICENSE_KEY}}

üìã –î–µ—Ç–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∏:
- Email: {{EMAIL}}
- –ü–ª–∞–Ω: {{PLAN_NAME}}
- –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {{EXPIRES_DATE}}

üöÄ –ö–∞–∫ –Ω–∞—á–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
1. –û—Ç–∫—Ä–æ–π—Ç–µ Figma Desktop
2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–ª–∞–≥–∏–Ω "Bulk Export by Sections"
3. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à email –∏ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á
4. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —ç–∫—Å–ø–æ—Ä—Ç–æ–º!

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ Figma Bulk Export'),

-- –®–∞–±–ª–æ–Ω –¥–ª—è –∏—Å—Ç–µ—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
('subscription_expiring',
'‚è∞ –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ Figma Plugin –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ 3 –¥–Ω—è',
'<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: #ff9500; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }
        .content { background: #f9f9f9; padding: 20px; border-radius: 0 0 8px 8px; }
        .warning { background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 6px; margin: 15px 0; }
        .button { display: inline-block; background: #ff9500; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; margin: 10px 0; }
        .footer { text-align: center; margin-top: 20px; font-size: 12px; color: #666; }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ</h1>
        </div>
        <div class="content">
            <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!</p>

            <div class="warning">
                <h3>‚ö†Ô∏è –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç —Å–∫–æ—Ä–æ!</h3>
                <p>–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ Figma Bulk Export Plugin –∏—Å—Ç–µ–∫–∞–µ—Ç <strong>{{EXPIRES_DATE}}</strong> (—á–µ—Ä–µ–∑ {{DAYS_LEFT}} –¥–Ω–µ–π).</p>
            </div>

            <p>–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–ª–∞–≥–∏–Ω –±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–∞, –ø—Ä–æ–¥–ª–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –∑–∞—Ä–∞–Ω–µ–µ.</p>

            <h3>üìã –î–µ—Ç–∞–ª–∏ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏:</h3>
            <ul>
                <li><strong>Email:</strong> {{EMAIL}}</li>
                <li><strong>–¢–µ–∫—É—â–∏–π –ø–ª–∞–Ω:</strong> {{PLAN_NAME}}</li>
                <li><strong>–õ–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á:</strong> {{LICENSE_KEY}}</li>
            </ul>

            <a href="#" class="button">–ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É</a>

            <p>–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏.</p>

            <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ Figma Bulk Export</p>
        </div>
        <div class="footer">
            <p>–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–∏—Å—å–º–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.</p>
        </div>
    </div>
</body>
</html>',
'‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ

–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ Figma Bulk Export Plugin –∏—Å—Ç–µ–∫–∞–µ—Ç {{EXPIRES_DATE}} (—á–µ—Ä–µ–∑ {{DAYS_LEFT}} –¥–Ω–µ–π).

üìã –î–µ—Ç–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∏:
- Email: {{EMAIL}}
- –ü–ª–∞–Ω: {{PLAN_NAME}}
- –ö–ª—é—á: {{LICENSE_KEY}}

–ü—Ä–æ–¥–ª–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–∞.

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ Figma Bulk Export'),

-- –®–∞–±–ª–æ–Ω –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
('subscription_renewed',
'‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ Figma Plugin –ø—Ä–æ–¥–ª–µ–Ω–∞!',
'<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: #28a745; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }
        .content { background: #f9f9f9; padding: 20px; border-radius: 0 0 8px 8px; }
        .success { background: #d4edda; border: 1px solid #c3e6cb; padding: 15px; border-radius: 6px; margin: 15px 0; }
        .license-key { background: #e8f4fd; padding: 15px; border-radius: 6px; margin: 15px 0; }
        .key-text { font-family: monospace; font-size: 16px; font-weight: bold; color: #0066cc; }
        .footer { text-align: center; margin-top: 20px; font-size: 12px; color: #666; }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–æ–¥–ª–µ–Ω–∞!</h1>
        </div>
        <div class="content">
            <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!</p>

            <div class="success">
                <h3>üéâ –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–ª–µ–Ω–∞!</h3>
                <p>–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ Figma Bulk Export Plugin.</p>
            </div>

            <h3>üìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∏:</h3>
            <ul>
                <li><strong>Email:</strong> {{EMAIL}}</li>
                <li><strong>–ü–ª–∞–Ω:</strong> {{PLAN_NAME}}</li>
                <li><strong>–ù–æ–≤–∞—è –¥–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è:</strong> {{EXPIRES_DATE}}</li>
            </ul>

            <div class="license-key">
                <h3>üîë –í–∞—à –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á:</h3>
                <div class="key-text">{{LICENSE_KEY}}</div>
                <small>–õ–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á –æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–µ–∂–Ω–∏–º</small>
            </div>

            <p>–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —ç–∫—Å–ø–æ—Ä—Ç–æ–º –∏–∑ Figma!</p>

            <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ Figma Bulk Export</p>
        </div>
        <div class="footer">
            <p>–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–∏—Å—å–º–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.</p>
        </div>
    </div>
</body>
</html>',
'‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–æ–¥–ª–µ–Ω–∞!

–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ Figma Bulk Export Plugin —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–ª–µ–Ω–∞.

üìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–µ—Ç–∞–ª–∏:
- Email: {{EMAIL}}
- –ü–ª–∞–Ω: {{PLAN_NAME}}
- –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {{EXPIRES_DATE}}
- –ö–ª—é—á: {{LICENSE_KEY}}

–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–ª–∞–≥–∏–Ω!

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ö–æ–º–∞–Ω–¥–∞ Figma Bulk Export')

ON CONFLICT (template_name) DO UPDATE SET
  subject = EXCLUDED.subject,
  html_body = EXCLUDED.html_body,
  text_body = EXCLUDED.text_body,
  updated_at = NOW();

-- 4. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–π —Å–µ—Ä–≤–∏—Å
CREATE OR REPLACE FUNCTION public.send_email(
  p_to_email TEXT,
  p_template_name TEXT,
  p_variables JSONB DEFAULT '{}'::jsonb,
  p_admin_key TEXT DEFAULT NULL
)
RETURNS JSON
LANGUAGE plpgsql
AS $$
DECLARE
  template_record RECORD;
  email_subject TEXT;
  email_html TEXT;
  email_text TEXT;
  log_id INTEGER;
  http_response JSON;
BEGIN
  -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω-–∫–ª—é—á–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  IF p_admin_key IS NOT NULL AND p_admin_key != 'figma-admin-2024-secure-key' THEN
    RETURN json_build_object(
      'success', false,
      'error', '–ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –∫–ª—é—á'
    );
  END IF;

  -- –ü–æ–ª—É—á–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞
  SELECT * INTO template_record
  FROM public.email_templates
  WHERE template_name = p_template_name;

  IF NOT FOUND THEN
    RETURN json_build_object(
      'success', false,
      'error', '–®–∞–±–ª–æ–Ω email –Ω–µ –Ω–∞–π–¥–µ–Ω: ' || p_template_name
    );
  END IF;

  -- –ó–∞–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —à–∞–±–ª–æ–Ω–µ
  email_subject := template_record.subject;
  email_html := template_record.html_body;
  email_text := template_record.text_body;

  -- –ü—Ä–æ—Å—Ç–∞—è –∑–∞–º–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö (–¥–ª—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Edge Functions)
  IF p_variables ? 'EMAIL' THEN
    email_subject := REPLACE(email_subject, '{{EMAIL}}', p_variables->>'EMAIL');
    email_html := REPLACE(email_html, '{{EMAIL}}', p_variables->>'EMAIL');
    email_text := REPLACE(email_text, '{{EMAIL}}', p_variables->>'EMAIL');
  END IF;

  IF p_variables ? 'LICENSE_KEY' THEN
    email_html := REPLACE(email_html, '{{LICENSE_KEY}}', p_variables->>'LICENSE_KEY');
    email_text := REPLACE(email_text, '{{LICENSE_KEY}}', p_variables->>'LICENSE_KEY');
  END IF;

  IF p_variables ? 'PLAN_NAME' THEN
    email_html := REPLACE(email_html, '{{PLAN_NAME}}', p_variables->>'PLAN_NAME');
    email_text := REPLACE(email_text, '{{PLAN_NAME}}', p_variables->>'PLAN_NAME');
  END IF;

  IF p_variables ? 'EXPIRES_DATE' THEN
    email_html := REPLACE(email_html, '{{EXPIRES_DATE}}', p_variables->>'EXPIRES_DATE');
    email_text := REPLACE(email_text, '{{EXPIRES_DATE}}', p_variables->>'EXPIRES_DATE');
  END IF;

  IF p_variables ? 'DAYS_LEFT' THEN
    email_html := REPLACE(email_html, '{{DAYS_LEFT}}', p_variables->>'DAYS_LEFT');
    email_text := REPLACE(email_text, '{{DAYS_LEFT}}', p_variables->>'DAYS_LEFT');
  END IF;

  -- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ø—ã—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
  INSERT INTO public.email_log (recipient_email, template_name, subject, status)
  VALUES (p_to_email, p_template_name, email_subject, 'preparing')
  RETURNING id INTO log_id;

  -- –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç HTTP –∑–∞–ø—Ä–æ—Å –∫ email —Å–µ—Ä–≤–∏—Å—É
  -- –ü–æ–∫–∞ —á—Ç–æ –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ (–¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
  UPDATE public.email_log
  SET status = 'sent', sent_at = NOW()
  WHERE id = log_id;

  RETURN json_build_object(
    'success', true,
    'log_id', log_id,
    'to_email', p_to_email,
    'subject', email_subject,
    'template_used', p_template_name,
    'message', 'Email –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å –æ—Ç–ø—Ä–∞–≤–∫–∏'
  );

EXCEPTION
  WHEN OTHERS THEN
    -- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
    UPDATE public.email_log
    SET status = 'failed', error_message = SQLERRM
    WHERE id = log_id;

    RETURN json_build_object(
      'success', false,
      'error', '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: ' || SQLERRM
    );
END;
$$;

-- 5. –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π email
CREATE OR REPLACE FUNCTION public.create_subscription_with_email(
  p_email TEXT,
  p_plan TEXT DEFAULT 'monthly',
  p_admin_key TEXT DEFAULT NULL
)
RETURNS JSON
LANGUAGE plpgsql
AS $$
DECLARE
  license_key TEXT;
  expires_at TIMESTAMP WITH TIME ZONE;
  subscription_record RECORD;
  plan_names JSONB;
  email_variables JSONB;
  email_result JSON;
BEGIN
  -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω-–∫–ª—é—á–∞
  IF p_admin_key IS NULL OR p_admin_key != 'figma-admin-2024-secure-key' THEN
    RETURN json_build_object(
      'success', false,
      'error', '–ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –∫–ª—é—á'
    );
  END IF;

  -- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞
  license_key := 'FIGMA-' || EXTRACT(EPOCH FROM NOW())::BIGINT || '-' ||
                 UPPER(SUBSTRING(MD5(RANDOM()::TEXT) FROM 1 FOR 8));

  -- –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –¥–∞—Ç—ã –∏—Å—Ç–µ—á–µ–Ω–∏—è
  expires_at := NOW() + CASE p_plan
    WHEN 'monthly' THEN INTERVAL '30 days'
    WHEN 'quarterly' THEN INTERVAL '90 days'
    WHEN 'yearly' THEN INTERVAL '365 days'
    ELSE INTERVAL '30 days'
  END;

  -- –ù–∞–∑–≤–∞–Ω–∏—è –ø–ª–∞–Ω–æ–≤
  plan_names := '{
    "monthly": "–ú–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞",
    "quarterly": "–ö–≤–∞—Ä—Ç–∞–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞",
    "yearly": "–ì–æ–¥–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞"
  }'::jsonb;

  -- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ø–æ–¥–ø–∏—Å–∫–∏
  SELECT * INTO subscription_record
  FROM public.subscriptions
  WHERE email = LOWER(TRIM(p_email));

  IF FOUND THEN
    -- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ø–æ–¥–ø–∏—Å–∫–∏
    UPDATE public.subscriptions
    SET
      license_key = create_subscription_with_email.license_key,
      plan = p_plan,
      status = 'active',
      expires_at = create_subscription_with_email.expires_at,
      updated_at = NOW()
    WHERE email = LOWER(TRIM(p_email))
    RETURNING * INTO subscription_record;

    -- –û—Ç–ø—Ä–∞–≤–∫–∞ email –æ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏
    email_variables := json_build_object(
      'EMAIL', subscription_record.email,
      'LICENSE_KEY', subscription_record.license_key,
      'PLAN_NAME', plan_names->>p_plan,
      'EXPIRES_DATE', to_char(subscription_record.expires_at, 'DD.MM.YYYY')
    )::jsonb;

    SELECT public.send_email(
      subscription_record.email,
      'subscription_renewed',
      email_variables
    ) INTO email_result;

  ELSE
    -- –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
    INSERT INTO public.subscriptions (
      email, license_key, plan, status, expires_at
    ) VALUES (
      LOWER(TRIM(p_email)), license_key, p_plan, 'active', expires_at
    ) RETURNING * INTO subscription_record;

    -- –û—Ç–ø—Ä–∞–≤–∫–∞ welcome email
    email_variables := json_build_object(
      'EMAIL', subscription_record.email,
      'LICENSE_KEY', subscription_record.license_key,
      'PLAN_NAME', plan_names->>p_plan,
      'EXPIRES_DATE', to_char(subscription_record.expires_at, 'DD.MM.YYYY')
    )::jsonb;

    SELECT public.send_email(
      subscription_record.email,
      'new_subscription',
      email_variables
    ) INTO email_result;
  END IF;

  RETURN json_build_object(
    'success', true,
    'subscription', json_build_object(
      'email', subscription_record.email,
      'license_key', subscription_record.license_key,
      'plan', subscription_record.plan,
      'expires_at', subscription_record.expires_at,
      'created_at', subscription_record.created_at
    ),
    'email_sent', email_result->'success',
    'email_log_id', email_result->'log_id'
  );

EXCEPTION
  WHEN OTHERS THEN
    RETURN json_build_object(
      'success', false,
      'error', '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏: ' || SQLERRM
    );
END;
$$;

-- 6. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ–± –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
CREATE OR REPLACE FUNCTION public.send_expiration_reminders(
  p_days_before INTEGER DEFAULT 3,
  p_admin_key TEXT DEFAULT NULL
)
RETURNS JSON
LANGUAGE plpgsql
AS $$
DECLARE
  subscription_record RECORD;
  email_variables JSONB;
  email_result JSON;
  sent_count INTEGER := 0;
  plan_names JSONB;
BEGIN
  -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω-–∫–ª—é—á–∞
  IF p_admin_key IS NULL OR p_admin_key != 'figma-admin-2024-secure-key' THEN
    RETURN json_build_object(
      'success', false,
      'error', '–ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –∫–ª—é—á'
    );
  END IF;

  plan_names := '{
    "monthly": "–ú–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞",
    "quarterly": "–ö–≤–∞—Ä—Ç–∞–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞",
    "yearly": "–ì–æ–¥–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞"
  }'::jsonb;

  -- –ü–æ–∏—Å–∫ –ø–æ–¥–ø–∏—Å–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å—Ç–µ–∫–∞—é—Ç —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π
  FOR subscription_record IN
    SELECT * FROM public.subscriptions
    WHERE status = 'active'
      AND expires_at > NOW()
      AND expires_at <= NOW() + (p_days_before || ' days')::INTERVAL
      AND (last_reminder_sent IS NULL OR last_reminder_sent < NOW() - INTERVAL '1 day')
  LOOP
    -- –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è email
    email_variables := json_build_object(
      'EMAIL', subscription_record.email,
      'LICENSE_KEY', subscription_record.license_key,
      'PLAN_NAME', plan_names->>subscription_record.plan,
      'EXPIRES_DATE', to_char(subscription_record.expires_at, 'DD.MM.YYYY'),
      'DAYS_LEFT', EXTRACT(DAY FROM subscription_record.expires_at - NOW())::TEXT
    )::jsonb;

    -- –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    SELECT public.send_email(
      subscription_record.email,
      'subscription_expiring',
      email_variables
    ) INTO email_result;

    -- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    UPDATE public.subscriptions
    SET last_reminder_sent = NOW()
    WHERE id = subscription_record.id;

    sent_count := sent_count + 1;
  END LOOP;

  RETURN json_build_object(
    'success', true,
    'reminders_sent', sent_count,
    'days_before_expiry', p_days_before
  );
END;
$$;

-- 7. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
ALTER TABLE public.subscriptions
ADD COLUMN IF NOT EXISTS last_reminder_sent TIMESTAMP WITH TIME ZONE;

-- 8. –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ email
CREATE OR REPLACE FUNCTION public.get_email_logs(
  p_limit INTEGER DEFAULT 50,
  p_admin_key TEXT DEFAULT NULL
)
RETURNS JSON
LANGUAGE plpgsql
AS $$
DECLARE
  email_logs JSON;
BEGIN
  -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω-–∫–ª—é—á–∞
  IF p_admin_key IS NULL OR p_admin_key != 'figma-admin-2024-secure-key' THEN
    RETURN json_build_object(
      'success', false,
      'error', '–ù–µ–≤–µ—Ä–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –∫–ª—é—á'
    );
  END IF;

  SELECT json_agg(
    json_build_object(
      'id', id,
      'recipient_email', recipient_email,
      'template_name', template_name,
      'subject', subject,
      'status', status,
      'error_message', error_message,
      'sent_at', sent_at,
      'created_at', created_at
    ) ORDER BY created_at DESC
  ) INTO email_logs
  FROM public.email_log
  LIMIT p_limit;

  RETURN json_build_object(
    'success', true,
    'logs', COALESCE(email_logs, '[]'::json)
  );
END;
$$;

-- 9. –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π
COMMENT ON FUNCTION public.send_email IS '–û—Ç–ø—Ä–∞–≤–∫–∞ email –ø–æ —à–∞–±–ª–æ–Ω—É —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏';
COMMENT ON FUNCTION public.create_subscription_with_email IS '–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–æ–π email';
COMMENT ON FUNCTION public.send_expiration_reminders IS '–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ–± –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏';
COMMENT ON FUNCTION public.get_email_logs IS '–ü–æ–ª—É—á–µ–Ω–∏–µ –ª–æ–≥–æ–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö email';

-- 10. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã email (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –¥–ª—è —Ç–µ—Å—Ç–∞)
/*
-- –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ welcome email
SELECT public.send_email(
  'test@example.com',
  'new_subscription',
  '{"EMAIL": "test@example.com", "LICENSE_KEY": "TEST-123-DEMO", "PLAN_NAME": "–ú–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞", "EXPIRES_DATE": "07.08.2025"}'::jsonb
);

-- –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ —Å email
SELECT public.create_subscription_with_email(
  'newuser@example.com',
  'monthly',
  'figma-admin-2024-secure-key'
);
*/
